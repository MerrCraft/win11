{"version":3,"sources":["App.js","index.js"],"names":["Window","_ref","id","title","children","isMinimized","isFullscreen","onClose","onMinimize","onToggleFullscreen","windowClassNames","_jsx","Draggable","handle","bounds","disabled","Rnd","default","x","y","width","height","enableResizing","className","_jsxs","onClick","Taskbar","_ref2","windows","onOpenWindow","map","window","App","setWindows","useState","content","isOpen","closeWindow","minimizeWindow","toggleFullscreenWindow","filter","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"iQAKA,MAAMA,EAASC,IAAkG,IAAjG,GAAEC,EAAE,MAAEC,EAAK,SAAEC,EAAQ,YAAEC,EAAW,aAAEC,EAAY,QAAEC,EAAO,WAAEC,EAAU,mBAAEC,GAAoBR,EACzG,MAAMS,EAAmB,UAAUJ,EAAe,aAAe,MAAMD,EAAc,YAAc,KAEnG,OACEM,cAACC,IAAS,CAACC,OAAO,iBAAiBC,OAAO,SAASC,SAAUT,GAAgBD,EAAYD,SACvFO,cAACK,IAAG,CACFC,QAAS,CACPC,EAAGZ,EAAe,EAAI,GACtBa,EAAGb,EAAe,EAAI,GACtBc,MAAOd,EAAe,OAAS,IAC/Be,OAAQf,EAAe,OAAS,KAElCgB,gBAAiBhB,IAAiBD,EAClCS,OAAO,SACPS,UAAWb,EAAiBN,SAE5BoB,eAAA,OAAApB,SAAA,CACEoB,eAAA,OAAKD,UAAU,gBAAenB,SAAA,CAC5BO,cAAA,QAAAP,SAAOD,IACPqB,eAAA,OAAKD,UAAU,kBAAiBnB,SAAA,CAC9BO,cAAA,UAAQc,QAASA,IAAMjB,EAAWN,GAAIE,SAAEC,EAAc,eAAO,iBAC7DM,cAAA,UAAQc,QAASA,IAAMhB,EAAmBP,GAAIE,SAAEE,EAAe,eAAO,iBACtEK,cAAA,UAAQc,QAASA,IAAMlB,EAAQL,GAAIE,SAAC,aAGtCC,GAAeM,cAAA,OAAKY,UAAU,iBAAgBnB,SAAEA,UAG5C,EAIVsB,EAAUC,IAAgC,IAA/B,QAAEC,EAAO,aAAEC,GAAcF,EACxC,OACEhB,cAAA,OAAKY,UAAU,UAASnB,SACtBO,cAAA,OAAKY,UAAU,iBAAgBnB,SAC5BwB,EAAQE,KAAIC,GACXpB,cAAA,UAAwBc,QAASA,IAAMI,EAAaE,EAAO7B,IAAIE,SAC5D2B,EAAO5B,OADG4B,EAAO7B,SAKpB,EA+CK8B,MA3CHA,KACV,MAAOJ,EAASK,GAAcC,mBAAS,CACrC,CAAEhC,GAAI,EAAGC,MAAO,WAAYgC,QAAS,sBAAuBC,QAAQ,EAAM/B,aAAa,EAAOC,cAAc,GAC5G,CAAEJ,GAAI,EAAGC,MAAO,WAAYgC,QAAS,sBAAuBC,QAAQ,EAAO/B,aAAa,EAAOC,cAAc,KAOzG+B,EAAenC,IACnB+B,EAAWL,EAAQE,KAAIC,GAAUA,EAAO7B,KAAOA,EAAK,IAAK6B,EAAQK,QAAQ,GAAUL,IAAQ,EAGvFO,EAAkBpC,IACtB+B,EAAWL,EAAQE,KAAIC,GAAUA,EAAO7B,KAAOA,EAAK,IAAK6B,EAAQ1B,aAAc0B,EAAO1B,aAAgB0B,IAAQ,EAG1GQ,EAA0BrC,IAC9B+B,EAAWL,EAAQE,KAAIC,GAAUA,EAAO7B,KAAOA,EAAK,IAAK6B,EAAQzB,cAAeyB,EAAOzB,cAAiByB,IAAQ,EAGlH,OACEP,eAAA,OAAKD,UAAU,UAASnB,SAAA,CACrBwB,EAAQY,QAAOT,GAAUA,EAAOK,SAAQN,KAAIC,GAC3CpB,cAACX,EAAM,CAELE,GAAI6B,EAAO7B,GACXC,MAAO4B,EAAO5B,MACdE,YAAa0B,EAAO1B,YACpBC,aAAcyB,EAAOzB,aACrBC,QAAS8B,EACT7B,WAAY8B,EACZ7B,mBAAoB8B,EAAuBnC,SAE1C2B,EAAOI,SATHJ,EAAO7B,MAYhBS,cAACe,EAAO,CAACE,QAASA,EAASC,aAhCX3B,IAClB+B,EAAWL,EAAQE,KAAIC,GAAUA,EAAO7B,KAAOA,EAAK,IAAK6B,EAAQK,QAAQ,EAAM/B,aAAa,GAAU0B,IAAQ,MAgCxG,ECrFVU,IAASC,OACP/B,cAACgC,IAAMC,WAAU,CAAAxC,SACfO,cAACqB,EAAG,MAENa,SAASC,eAAe,Q","file":"static/js/main.22cf4b08.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport { Rnd } from 'react-rnd';\nimport './App.css';\n\nconst Window = ({ id, title, children, isMinimized, isFullscreen, onClose, onMinimize, onToggleFullscreen }) => {\n  const windowClassNames = `window ${isFullscreen ? 'fullscreen' : ''} ${isMinimized ? 'minimized' : ''}`;\n\n  return (\n    <Draggable handle=\".window-header\" bounds=\"parent\" disabled={isFullscreen || isMinimized}>\n      <Rnd\n        default={{\n          x: isFullscreen ? 0 : 50,\n          y: isFullscreen ? 0 : 50,\n          width: isFullscreen ? '100%' : 300,\n          height: isFullscreen ? '100%' : 200,\n        }}\n        enableResizing={!isFullscreen && !isMinimized}\n        bounds=\"parent\"\n        className={windowClassNames}\n      >\n        <div>\n          <div className=\"window-header\">\n            <span>{title}</span>\n            <div className=\"window-controls\">\n              <button onClick={() => onMinimize(id)}>{isMinimized ? 'ðŸ”¼' : 'ðŸ”½'}</button>\n              <button onClick={() => onToggleFullscreen(id)}>{isFullscreen ? 'ðŸ——' : 'ðŸ—–'}</button>\n              <button onClick={() => onClose(id)}>X</button>\n            </div>\n          </div>\n          {!isMinimized && <div className=\"window-content\">{children}</div>}\n        </div>\n      </Rnd>\n    </Draggable>\n  );\n};\n\nconst Taskbar = ({ windows, onOpenWindow }) => {\n  return (\n    <div className=\"taskbar\">\n      <div className=\"taskbar-center\">\n        {windows.map(window => (\n          <button key={window.id} onClick={() => onOpenWindow(window.id)}>\n            {window.title}\n          </button>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [windows, setWindows] = useState([\n    { id: 1, title: 'Window 1', content: 'Content of Window 1', isOpen: true, isMinimized: false, isFullscreen: true },\n    { id: 2, title: 'Window 2', content: 'Content of Window 2', isOpen: false, isMinimized: false, isFullscreen: false },\n  ]);\n\n  const openWindow = (id) => {\n    setWindows(windows.map(window => window.id === id ? { ...window, isOpen: true, isMinimized: false } : window));\n  };\n\n  const closeWindow = (id) => {\n    setWindows(windows.map(window => window.id === id ? { ...window, isOpen: false } : window));\n  };\n\n  const minimizeWindow = (id) => {\n    setWindows(windows.map(window => window.id === id ? { ...window, isMinimized: !window.isMinimized } : window));\n  };\n\n  const toggleFullscreenWindow = (id) => {\n    setWindows(windows.map(window => window.id === id ? { ...window, isFullscreen: !window.isFullscreen } : window));\n  };\n\n  return (\n    <div className=\"desktop\">\n      {windows.filter(window => window.isOpen).map(window => (\n        <Window\n          key={window.id}\n          id={window.id}\n          title={window.title}\n          isMinimized={window.isMinimized}\n          isFullscreen={window.isFullscreen}\n          onClose={closeWindow}\n          onMinimize={minimizeWindow}\n          onToggleFullscreen={toggleFullscreenWindow}\n        >\n          {window.content}\n        </Window>\n      ))}\n      <Taskbar windows={windows} onOpenWindow={openWindow} />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}